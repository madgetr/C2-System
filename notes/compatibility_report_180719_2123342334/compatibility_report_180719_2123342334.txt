Converting GML script: ${project_dir}\scripts\pinch_init\pinch_init.gml
Converted builtin - line 27: view_wview[view_used] -> __view_get( e__VW.WView, view_used )
Converted builtin - line 28: view_hview[view_used] -> __view_get( e__VW.HView, view_used )

Converting GML script: ${project_dir}\scripts\pinch_step\pinch_step.gml
Converted builtin - line 27: view_xview[view_used] -> __view_get( e__VW.XView, view_used )
Converted builtin - line 52: view_xview[view_used] -> __view_get( e__VW.XView, view_used )
Converted builtin - line 40: view_xview[view_used] = locked_on_plr_inst.x - half_xview -> __view_set( e__VW.XView, view_used, locked_on_plr_inst.x - half_xview )
Converted builtin - line 45: view_xview[view_used] = v_x - half_xview + v_xjoy -> __view_set( e__VW.XView, view_used, v_x - half_xview + v_xjoy )
Converted builtin - line 28: view_yview[view_used] -> __view_get( e__VW.YView, view_used )
Converted builtin - line 53: view_yview[view_used] -> __view_get( e__VW.YView, view_used )
Converted builtin - line 41: view_yview[view_used] = locked_on_plr_inst.y - half_yview -> __view_set( e__VW.YView, view_used, locked_on_plr_inst.y - half_yview )
Converted builtin - line 46: view_yview[view_used] = v_y - half_yview + v_yjoy -> __view_set( e__VW.YView, view_used, v_y - half_yview + v_yjoy )
Converted builtin - line 25: view_wview[view_used] -> __view_get( e__VW.WView, view_used )
Converted builtin - line 34: view_wview[view_used] -> __view_get( e__VW.WView, view_used )
Converted builtin - line 52: view_wview[view_used] -> __view_get( e__VW.WView, view_used )
Converted builtin - line 31: view_wview[view_used] = initial_w * v_scale -> __view_set( e__VW.WView, view_used, initial_w * v_scale )
Converted builtin - line 26: view_hview[view_used] -> __view_get( e__VW.HView, view_used )
Converted builtin - line 35: view_hview[view_used] -> __view_get( e__VW.HView, view_used )
Converted builtin - line 53: view_hview[view_used] -> __view_get( e__VW.HView, view_used )
Converted builtin - line 32: view_hview[view_used] = initial_h * v_scale -> __view_set( e__VW.HView, view_used, initial_h * v_scale )
Converted description /// @description  pinch and zoom
Converted builtin - line 52: view_xview[view_used] = median(constraintxmin, __view_get( e__VW.XView, view_used ), constraintxmax-__view_get( e__VW.WView, view_used )) -> __view_set( e__VW.XView, view_used, median(constraintxmin, __view_get( e__VW.XView, view_used ), constraintxmax-__view_get( e__VW.WView, view_used )) )
Converted builtin - line 53: view_yview[view_used] = median(constraintymin, __view_get( e__VW.YView, view_used ), constraintymax-__view_get( e__VW.HView, view_used )) -> __view_set( e__VW.YView, view_used, median(constraintymin, __view_get( e__VW.YView, view_used ), constraintymax-__view_get( e__VW.HView, view_used )) )

Converting GML script: ${project_dir}\objects\obj_plr\Create_0.gml
Converted description /// @description  pinch & zoom init

Converting GML script: ${project_dir}\objects\obj_plr\Step_0.gml
Converted description /// @description  move

Converting GML script: ${project_dir}\objects\obj_init\Create_0.gml
Converted description /// @description  set view & GUI size

Added compatibility script 'action/action_next_room.gml'
Added compatibility script 'view/room_set_view.gml'
Added compatibility script 'view/__view_get.gml'
Added compatibility script 'view/__view_set.gml'
Added compatibility script 'view/__view_set_internal.gml'
Added compatibility script 'action/__init_action.gml'
Added compatibility script 'view/__init_view.gml'
Added compatibility script '__init_global.gml'